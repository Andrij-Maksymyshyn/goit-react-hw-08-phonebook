{"version":3,"file":"static/js/655.bdc97eb4.chunk.js","mappings":"4PAEaA,EAAWC,EAAAA,GAAAA,IAAH,qDAIRC,EAAUD,EAAAA,GAAAA,KAAH,oLASPE,EAAWF,EAAAA,GAAAA,MAAH,yKAURG,EAAWH,EAAAA,GAAAA,MAAH,6EAKRI,EAAYJ,EAAAA,GAAAA,OAAH,8R,UCzBP,SAASK,IACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACQC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAArCH,MAEDI,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACjC,OAAQD,GACJ,IAAK,QACD,OAAOT,EAASU,GACpB,IAAK,WACD,OAAOR,EAAYQ,GACvB,QACI,SAWZ,OACI,UAACrB,EAAD,YACA,uCACGc,IAAS,gDAAwBA,EAAMQ,YACtC,UAACpB,EAAD,CAASqB,aAAa,MAAMC,SAXnB,SAAAC,GACbA,EAAEC,iBACFnB,EAASoB,EAAAA,EAAAA,MAAqB,CAACjB,MAAAA,EAAOE,SAAAA,KACtCD,EAAS,IACTE,EAAY,KAOR,WACF,UAACV,EAAD,oBAEE,SAACC,EAAD,CACEwB,KAAK,QACLR,KAAK,QACLC,MAAOX,EACPmB,UAAQ,EACRC,SAAUZ,QAId,UAACf,EAAD,uBAEE,SAACC,EAAD,CACEwB,KAAK,WACLR,KAAK,WACLC,MAAOT,EACPiB,UAAQ,EACRC,SAAUZ,QAGd,SAACb,EAAD,CAAWuB,KAAK,SAAhB","sources":["views/LoginView.styled.jsx","views/LoginView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DivLogin = styled.div`\ntext-align: -webkit-center;\n`\n\nexport const FormLog = styled.form`\n  display: flex;\n  flex-direction: column;\n  flex-flow: column wrap;\n  align-items: flex-start;\n  width: min-content;;\n  border: 2px solid steelblue;\n`;\n\nexport const LabelLog = styled.label`\n  display: flex;\n  flex-flow: column wrap;\n  text-align: left;\n  font-weight: 500;\n  font-size: 18px;\n  margin: 15px;\n  margin-bottom: 0;\n`;\n\nexport const InputLog = styled.input`\n  border: 2px solid lightblue;\n  margin-top: 10px;\n`;\n\nexport const ButtonLog = styled.button`\n  margin-top: 15px;\n  margin-bottom: 15px;\n  margin-left: 15px;\n  border-radius: 4px;\n  border: none;\n  background-color: forestgreen;\n  font-weight: 600;\n  cursor: pointer;\n  padding: 5px;\n  opacity: 0.8;\n    &:hover, &:focus {\n    opacity: 1;\n  }\n`;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport authOperations from '../redux/auth/auth-operations';\nimport { DivLogin, FormLog, LabelLog, InputLog, ButtonLog } from './LoginView.styled';\n\nexport default function LoginView() {\nconst dispatch = useDispatch();\nconst [email, setEmail] = useState('');\nconst [password, setPassword] = useState('');\nconst { error } = useSelector(state => state.auth);\n  \n const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            default:\n                return;\n        }\n    };\n\nconst handleSubmit = e => {\n        e.preventDefault();\n        dispatch(authOperations.logIn({email, password}));\n        setEmail('');\n        setPassword('');\n    };\n\n    return (\n        <DivLogin>\n        <h1>Login page</h1>\n          {error && <h2>An error occurred: {error.message}</h2>}\n            <FormLog autoComplete=\"off\" onSubmit={handleSubmit}>\n          <LabelLog>\n            Email\n            <InputLog\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              required\n              onChange={handleChange}\n            />\n          </LabelLog>\n          \n          <LabelLog>\n            Password\n            <InputLog\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              required\n              onChange={handleChange}\n            />\n          </LabelLog>\n          <ButtonLog type=\"submit\">LOG IN</ButtonLog>\n        </FormLog>\n        </DivLogin>\n    )\n\n\n}\n\n"],"names":["DivLogin","styled","FormLog","LabelLog","InputLog","ButtonLog","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","error","useSelector","state","auth","handleChange","target","name","value","message","autoComplete","onSubmit","e","preventDefault","authOperations","type","required","onChange"],"sourceRoot":""}
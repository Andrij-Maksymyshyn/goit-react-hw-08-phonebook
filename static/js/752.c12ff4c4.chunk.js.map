{"version":3,"file":"static/js/752.c12ff4c4.chunk.js","mappings":"4PAEaA,EAAcC,EAAAA,GAAAA,IAAH,qDAIXC,EAAUD,EAAAA,GAAAA,KAAH,mLASPE,EAAWF,EAAAA,GAAAA,MAAH,yKAURG,EAAWH,EAAAA,GAAAA,MAAH,6EAKRI,EAAYJ,EAAAA,GAAAA,OAAH,8R,UCzBP,SAASK,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACQC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAArCH,MAIFI,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUX,EAAoB,EAApBA,KAAMY,EAAc,EAAdA,MACpC,OAAQZ,GACJ,IAAK,OACD,OAAOC,EAAQW,GACnB,IAAK,QACD,OAAOT,EAASS,GACpB,IAAK,WACD,OAAOP,EAAYO,GACvB,QACI,SAYZ,OACI,UAACtB,EAAD,YACA,8CACGgB,IAAS,gDAAwBA,EAAMO,YACtC,UAACrB,EAAD,CAASsB,aAAa,MAAMC,SAZf,SAAAC,GACjBA,EAAEC,iBACFpB,EAASqB,EAAAA,EAAAA,SAAwB,CAAClB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAC/CH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAOR,WACF,UAACZ,EAAD,mBAEE,SAACC,EAAD,CACEyB,KAAK,OACLnB,KAAK,OACLY,MAAOZ,EACPoB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUb,QAId,UAACjB,EAAD,oBAEE,SAACC,EAAD,CACEyB,KAAK,QACLnB,KAAK,QACLY,MAAOV,EACPoB,UAAQ,EACRC,SAAUb,QAId,UAACjB,EAAD,uBAEE,SAACC,EAAD,CACEyB,KAAK,WACLnB,KAAK,WACLY,MAAOR,EACPkB,UAAQ,EACRC,SAAUb,QAGd,SAACf,EAAD,CAAWwB,KAAK,SAAhB","sources":["views/RegisterView.styled.jsx","views/RegisterView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DivRegister = styled.div`\ntext-align: -webkit-center;\n`\n\nexport const FormReg = styled.form`\n  display: flex;\n  flex-direction: column;\n  flex-flow: column wrap;\n  align-items: flex-start;\n  width: min-content;\n  border: 2px solid steelblue;\n`;\n\nexport const LabelReg = styled.label`\n  display: flex;\n  flex-flow: column wrap;\n  text-align: left;\n  font-weight: 500;\n  font-size: 18px;\n  margin: 15px;\n  margin-bottom: 0;\n`;\n\nexport const InputReg = styled.input`\n  border: 2px solid lightblue;\n  margin-top: 10px;\n`;\n\nexport const ButtonReg = styled.button`\n  margin-top: 15px;\n  margin-bottom: 15px;\n  margin-left: 15px;\n  border-radius: 4px;\n  border: none;\n  background-color: forestgreen;\n  font-weight: 600;\n  cursor: pointer;\n  padding: 5px;\n  opacity: 0.8;\n    &:hover, &:focus {\n    opacity: 1;\n  }\n`;\n\n\n\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport authOperations from '../redux/auth/auth-operations';\nimport { DivRegister, FormReg, LabelReg, InputReg, ButtonReg } from './RegisterView.styled';\n\nexport default function RegisterView() {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const { error } = useSelector(state => state.auth);\n\n  \n\n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(authOperations.register({name, email, password}));\n        setName('');\n        setEmail('');\n        setPassword('');\n    };\n\n    return (\n        <DivRegister>\n        <h1>Registration page</h1>\n          {error && <h2>An error occurred: {error.message}</h2>}\n            <FormReg autoComplete=\"off\" onSubmit={handleSubmit}>\n          <LabelReg>\n            Name\n            <InputReg\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handleChange}\n            />\n          </LabelReg>\n\n          <LabelReg>\n            Email\n            <InputReg\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              required\n              onChange={handleChange}\n            />\n          </LabelReg>\n          \n          <LabelReg>\n            Password\n            <InputReg\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              required\n              onChange={handleChange}\n            />\n          </LabelReg>\n          <ButtonReg type=\"submit\">SIGN UP</ButtonReg>\n        </FormReg>\n        </DivRegister>\n    )\n}\n\n"],"names":["DivRegister","styled","FormReg","LabelReg","InputReg","ButtonReg","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","error","useSelector","state","auth","handleChange","target","value","message","autoComplete","onSubmit","e","preventDefault","authOperations","type","pattern","title","required","onChange"],"sourceRoot":""}